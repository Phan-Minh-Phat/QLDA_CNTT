// <auto-generated />
using System;
using DeTai4.Reponsitories.Repositories.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DeTai4.Reponsitories.Migrations
{
    [DbContext(typeof(DeTai4Context))]
    [Migration("20241108172853_AddReportAndRemoveUserIdFromProject")]
    partial class AddReportAndRemoveUserIdFromProject
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.CompanyInfo", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("CompanyId")
                        .HasName("PK__CompanyI__2D971CAC8CABD8BC");

                    b.ToTable("CompanyInfo", (string)null);
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__A4AE64D89347B859");

                    b.HasIndex(new[] { "UserId" }, "IX_Customer_UserId");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.Design", b =>
                {
                    b.Property<int>("DesignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DesignId"));

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DesignName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("DesignId")
                        .HasName("PK__Design__32B8E15F8BFE7A9F");

                    b.ToTable("Design", (string)null);
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("FeedbackDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId")
                        .HasName("PK__Feedback__6A4BEDD649DF5D15");

                    b.HasIndex(new[] { "OrderId" }, "IX_Feedback_OrderId");

                    b.ToTable("Feedback", (string)null);
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("InvoiceId")
                        .HasName("PK__Invoice__D796AAB50D581F7C");

                    b.HasIndex("CustomerId");

                    b.HasIndex(new[] { "OrderId" }, "IX_Invoice_OrderId");

                    b.ToTable("Invoice", (string)null);
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.MaintenanceResult", b =>
                {
                    b.Property<int>("MaintenanceResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaintenanceResultId"));

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ResultDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ResultDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("MaintenanceResultId")
                        .HasName("PK__Maintena__B7A4A728F14F20C9");

                    b.HasIndex("ProjectId");

                    b.HasIndex(new[] { "ServiceId" }, "IX_MaintenanceResult_ServiceId");

                    b.HasIndex(new[] { "StaffId" }, "IX_MaintenanceResult_StaffId");

                    b.ToTable("MaintenanceResult", (string)null);
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId")
                        .HasName("PK__Order__C3905BCF0FD2C276");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "CustomerId" }, "IX_Order_CustomerId");

                    b.HasIndex(new[] { "ServiceId" }, "IX_Order_ServiceId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DesignId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ProjectName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("QuotationAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("QuotationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuotationDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId")
                        .HasName("PK__Project__761ABEF054011FD6");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "CustomerId" }, "IX_Project_CustomerId");

                    b.HasIndex(new[] { "DesignId" }, "IX_Project_DesignId");

                    b.HasIndex(new[] { "StaffId" }, "IX_Project_StaffId");

                    b.ToTable("Project", (string)null);
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.Promotion", b =>
                {
                    b.Property<int>("PromotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionId"));

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PromotionName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("PromotionId")
                        .HasName("PK__Promotio__52C42FCF048FAA1D");

                    b.ToTable("Promotion", (string)null);
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.Quotation", b =>
                {
                    b.Property<int>("QuotationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuotationId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("QuotationId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Quotations");
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<int>("ActivePromotions")
                        .HasColumnType("int");

                    b.Property<int>("CompletedProjects")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalProjects")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalQuotationAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ReportId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ServiceName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ServiceId")
                        .HasName("PK__Service__C51BB00A796E379B");

                    b.ToTable("Service", (string)null);
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"));

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("StaffId")
                        .HasName("PK__Staff__96D4AB17C95B522F");

                    b.HasIndex(new[] { "UserId" }, "IX_Staff_UserId");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__User__1788CC4C9BF7CD94");

                    b.HasIndex(new[] { "Username" }, "UQ__User__536C85E4C52321FE")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("ProjectStaff", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId", "StaffId")
                        .HasName("PK__ProjectS__1F77F4412B76BD16");

                    b.HasIndex(new[] { "StaffId" }, "IX_ProjectStaff_StaffId");

                    b.ToTable("ProjectStaff", (string)null);
                });

            modelBuilder.Entity("ServiceStaff", b =>
                {
                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("ServiceId", "StaffId")
                        .HasName("PK__ServiceS__AC76FABB2C901DAC");

                    b.HasIndex(new[] { "StaffId" }, "IX_ServiceStaff_StaffId");

                    b.ToTable("ServiceStaff", (string)null);
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.Customer", b =>
                {
                    b.HasOne("DeTai4.Reponsitories.Repositories.Entities.User", "User")
                        .WithMany("Customers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Customer_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.Feedback", b =>
                {
                    b.HasOne("DeTai4.Reponsitories.Repositories.Entities.Order", "Order")
                        .WithMany("Feedbacks")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_Feedback_Order");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.Invoice", b =>
                {
                    b.HasOne("DeTai4.Reponsitories.Repositories.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("DeTai4.Reponsitories.Repositories.Entities.Order", "Order")
                        .WithMany("Invoices")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_Invoice_Order");

                    b.Navigation("Customer");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.MaintenanceResult", b =>
                {
                    b.HasOne("DeTai4.Reponsitories.Repositories.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("DeTai4.Reponsitories.Repositories.Entities.Service", "Service")
                        .WithMany("MaintenanceResults")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK_MaintenanceResult_Service");

                    b.HasOne("DeTai4.Reponsitories.Repositories.Entities.Staff", "Staff")
                        .WithMany("MaintenanceResults")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK_MaintenanceResult_Staff");

                    b.Navigation("Project");

                    b.Navigation("Service");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.Order", b =>
                {
                    b.HasOne("DeTai4.Reponsitories.Repositories.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Order_Customer");

                    b.HasOne("DeTai4.Reponsitories.Repositories.Entities.Service", "Service")
                        .WithMany("Orders")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK_Order_Service");

                    b.HasOne("DeTai4.Reponsitories.Repositories.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId");

                    b.Navigation("Customer");

                    b.Navigation("Service");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.Project", b =>
                {
                    b.HasOne("DeTai4.Reponsitories.Repositories.Entities.Customer", "Customer")
                        .WithMany("Projects")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Project_Customer");

                    b.HasOne("DeTai4.Reponsitories.Repositories.Entities.Design", "Design")
                        .WithMany("Projects")
                        .HasForeignKey("DesignId")
                        .HasConstraintName("FK_Project_Design");

                    b.HasOne("DeTai4.Reponsitories.Repositories.Entities.Staff", "Staff")
                        .WithMany("Projects")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK_Project_Staff");

                    b.HasOne("DeTai4.Reponsitories.Repositories.Entities.User", null)
                        .WithMany("Projects")
                        .HasForeignKey("UserId");

                    b.Navigation("Customer");

                    b.Navigation("Design");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.Quotation", b =>
                {
                    b.HasOne("DeTai4.Reponsitories.Repositories.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.Staff", b =>
                {
                    b.HasOne("DeTai4.Reponsitories.Repositories.Entities.User", "User")
                        .WithMany("Staff")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Staff_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectStaff", b =>
                {
                    b.HasOne("DeTai4.Reponsitories.Repositories.Entities.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK_ProjectStaff_Project");

                    b.HasOne("DeTai4.Reponsitories.Repositories.Entities.Staff", null)
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .IsRequired()
                        .HasConstraintName("FK_ProjectStaff_Staff");
                });

            modelBuilder.Entity("ServiceStaff", b =>
                {
                    b.HasOne("DeTai4.Reponsitories.Repositories.Entities.Service", null)
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .IsRequired()
                        .HasConstraintName("FK_ServiceStaff_Service");

                    b.HasOne("DeTai4.Reponsitories.Repositories.Entities.Staff", null)
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .IsRequired()
                        .HasConstraintName("FK_ServiceStaff_Staff");
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.Customer", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.Design", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.Order", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.Service", b =>
                {
                    b.Navigation("MaintenanceResults");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.Staff", b =>
                {
                    b.Navigation("MaintenanceResults");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("DeTai4.Reponsitories.Repositories.Entities.User", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Orders");

                    b.Navigation("Projects");

                    b.Navigation("Staff");
                });
#pragma warning restore 612, 618
        }
    }
}
